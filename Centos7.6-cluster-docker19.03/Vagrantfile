# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

    config.vm.define "cluster" do |cluster|

    cluster.vm.box = "Centos7.6"
    cluster.vm.network "private_network", ip: "192.168.137.200"
    cluster.vm.hostname="cluster"

    cluster.vm.provider "virtualbox" do |vb|
        vb.name = "cluster"
        vb.memory = "2048"
        vb.cpus = "2"
    end
    # View the documentation for the provider you are using for more

    cluster.vm.provision "shell", :path => "cluster.sh"
    end


  (1..2).each do |i|
      config.vm.define "slave#{i}" do |slave|

      slave.vm.box = "Centos7.6"
      slave.disksize.size = "120GB"

      # Disable automatic box update checking. If you disable this, then
      # boxes will only be checked for updates when the user runs
      # `vagrant box outdated`. This is not recommended.
      # config.vm.box_check_update = false

      # Create a forwarded port mapping which allows access to a specific port
      # within the machine from a port on the host machine. In the example below,
      # accessing "localhost:8080" will access port 80 on the guest machine.
      # NOTE: This will enable public access to the opened port
      # config.vm.network "forwarded_port", guest: 80, host: 8080

      # Create a forwarded port mapping which allows access to a specific port
      # within the machine from a port on the host machine and only allow access
      # via 127.0.0.1 to disable public access
      # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

      # Create a private network, which allows host-only access to the machine
      # 仅主机 HostOnly 模式
      #slave.vm.network "public_network", ip: "192.168.110.20#{i}"
      slave.vm.network "private_network", ip: "192.168.137.20#{i}"
      # Create a public network, which generally matched to bridged network.
      # Bridged networks make the machine appear as another physical device on
      # your network.
      # NAT 网络
      # config.vm.network "public_network", ip: "172.16.10.10"
      # 桥接
      # config.vm.network "public_network", bridge: "en1: Wi-Fi (AirPort)"

      # Share an additional folder to the guest VM. The first argument is
      # the path on the host to the actual folder. The second argument is
      # the path on the guest to mount the folder. And the optional third
      # argument is a set of non-required options.
      # config.vm.synced_folder "../data", "/vagrant_data"
      slave.vm.hostname="slave#{i}"
      # 共享目录
      # slave.vm.synced_folder "~/Desktop/share", "/home/vagrant/share"

      # Provider-specific configuration so you can fine-tune various
      # backing providers for Vagrant. These expose provider-specific options.
      # Example for VirtualBox:
      #
      slave.vm.provider "virtualbox" do |vb|
      #   # Display the VirtualBox GUI when booting the machine
      #   vb.gui = true
      #
         vb.name = "slave#{i}"
         vb.memory = "2048"
         vb.cpus = "2"
       end
      #
      # View the documentation for the provider you are using for more
      # information on available options.

      # Enable provisioning with a shell script. Additional provisioners such as
      # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
      # documentation for more information about their specific syntax and use.
      slave.vm.provision "shell", :path => "slave.sh"
      end
    end
end
